{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joker/Desktop/ink/work/nft-holder/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from 'next/router';\nimport { ConfigProvider, notification } from 'antd';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport { SWRConfig } from 'swr';\nimport NProgress from 'nprogress';\nimport fetcher from '../lib/fetcher';\nimport useIsMobile from '../hooks/use-is-mobile';\nimport '../styles/globals.css';\nimport '../styles/nprogress.css';\nimport { useEffect } from 'react';\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const isMobile = useIsMobile();\n  useEffect(() => {\n    if (isMobile) notification.config({\n      placement: 'bottomLeft',\n      bottom: 10\n    });\n  }, [isMobile]);\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    locale: zhCN,\n    children: /*#__PURE__*/_jsxDEV(SWRConfig, {\n      value: {\n        fetcher\n      },\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joker/Desktop/ink/work/nft-holder/pages/_app.tsx"],"names":["Router","ConfigProvider","notification","zhCN","SWRConfig","NProgress","fetcher","useIsMobile","useEffect","events","on","start","done","App","Component","pageProps","isMobile","config","placement","bottom"],"mappings":";;;;;;;;;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,MAA7C;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,OAAO,uBAAP;AACA,OAAO,yBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEAR,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAML,SAAS,CAACM,KAAV,EAA3C;AAEAX,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAML,SAAS,CAACO,IAAV,EAA9C;AAEAZ,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAML,SAAS,CAACO,IAAV,EAA3C;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAiD;AAC9D,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAJ,EACEd,YAAY,CAACe,MAAb,CAAoB;AAClBC,MAAAA,SAAS,EAAE,YADO;AAElBC,MAAAA,MAAM,EAAE;AAFU,KAApB;AAIH,GANQ,EAMN,CAACH,QAAD,CANM,CAAT;AAQA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEb,IAAxB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA;AAAF,OAAlB;AAAA,6BACE,QAAC,SAAD,oBAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { AppProps } from 'next/app'\nimport Router from 'next/router'\nimport { ConfigProvider, notification } from 'antd'\nimport zhCN from 'antd/lib/locale/zh_CN'\nimport { SWRConfig } from 'swr'\nimport NProgress from 'nprogress'\n\nimport fetcher from '../lib/fetcher'\nimport useIsMobile from '../hooks/use-is-mobile'\n\nimport '../styles/globals.css'\nimport '../styles/nprogress.css'\nimport { useEffect } from 'react'\n\nRouter.events.on('routeChangeStart', () => NProgress.start())\n\nRouter.events.on('routeChangeComplete', () => NProgress.done())\n\nRouter.events.on('routeChangeError', () => NProgress.done())\n\nexport default function App({ Component, pageProps }: AppProps) {\n  const isMobile = useIsMobile()\n\n  useEffect(() => {\n    if (isMobile)\n      notification.config({\n        placement: 'bottomLeft',\n        bottom: 10\n      })\n  }, [isMobile])\n\n  return (\n    <ConfigProvider locale={zhCN}>\n      <SWRConfig value={{ fetcher }}>\n        <Component {...pageProps} />\n      </SWRConfig>\n    </ConfigProvider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}