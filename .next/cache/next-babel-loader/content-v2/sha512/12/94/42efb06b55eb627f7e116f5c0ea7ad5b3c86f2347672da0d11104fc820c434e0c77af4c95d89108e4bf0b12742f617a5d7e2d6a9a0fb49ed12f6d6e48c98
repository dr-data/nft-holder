{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport useSWR from 'swr';\nexport default function useMe() {\n  _s();\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$redirectTo = _ref.redirectTo,\n      redirectTo = _ref$redirectTo === void 0 ? false : _ref$redirectTo,\n      _ref$redirectIfFound = _ref.redirectIfFound,\n      redirectIfFound = _ref$redirectIfFound === void 0 ? false : _ref$redirectIfFound;\n\n  var _useSWR = useSWR('/api/me'),\n      me = _useSWR.data,\n      mutateMe = _useSWR.mutate;\n\n  useEffect(function () {\n    if (!redirectTo || !me) return;\n\n    if (redirectTo && !redirectIfFound && !(me !== null && me !== void 0 && me.isLoggedIn) || redirectIfFound && me !== null && me !== void 0 && me.isLoggedIn) {\n      Router.push(redirectTo);\n    }\n  }, [me, redirectIfFound, redirectTo]);\n  return {\n    me: me,\n    mutateMe: mutateMe\n  };\n}\n\n_s(useMe, \"/1s8Qo8hx+OGEW+wKusTN6R8LOc=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["/Users/joker/Desktop/ink/work/nft-holder/hooks/use-me.ts"],"names":["useEffect","Router","useSWR","useMe","redirectTo","redirectIfFound","me","data","mutateMe","mutate","isLoggedIn","push"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AASA,eAAe,SAASC,KAAT,GAGK;AAAA;;AAAA,iFAAJ,EAAI;AAAA,6BAFlBC,UAEkB;AAAA,MAFlBA,UAEkB,gCAFL,KAEK;AAAA,kCADlBC,eACkB;AAAA,MADlBA,eACkB,qCADA,KACA;;AAAA,gBACqBH,MAAM,CAAW,SAAX,CAD3B;AAAA,MACJI,EADI,WACVC,IADU;AAAA,MACQC,QADR,WACAC,MADA;;AAGlBT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACI,UAAD,IAAe,CAACE,EAApB,EAAwB;;AAExB,QACGF,UAAU,IAAI,CAACC,eAAf,IAAkC,EAACC,EAAD,aAACA,EAAD,eAACA,EAAE,CAAEI,UAAL,CAAnC,IACCL,eAAe,IAAIC,EAAJ,aAAIA,EAAJ,eAAIA,EAAE,CAAEI,UAF1B,EAGE;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAYP,UAAZ;AACD;AACF,GATQ,EASN,CAACE,EAAD,EAAKD,eAAL,EAAsBD,UAAtB,CATM,CAAT;AAWA,SAAO;AAAEE,IAAAA,EAAE,EAAFA,EAAF;AAAME,IAAAA,QAAQ,EAARA;AAAN,GAAP;AACD;;GAlBuBL,K;UAIiBD,M","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router'\nimport useSWR from 'swr'\n\nimport { UserType } from '../typings/user'\n\nexport interface UseMeProps {\n  redirectTo?: boolean | string\n  redirectIfFound?: boolean\n}\n\nexport default function useMe({\n  redirectTo = false,\n  redirectIfFound = false\n}: UseMeProps = {}) {\n  const { data: me, mutate: mutateMe } = useSWR<UserType>('/api/me')\n\n  useEffect(() => {\n    if (!redirectTo || !me) return\n\n    if (\n      (redirectTo && !redirectIfFound && !me?.isLoggedIn) ||\n      (redirectIfFound && me?.isLoggedIn)\n    ) {\n      Router.push(redirectTo as string)\n    }\n  }, [me, redirectIfFound, redirectTo])\n\n  return { me, mutateMe }\n}\n"]},"metadata":{},"sourceType":"module"}