{"ast":null,"code":"import { useEffect } from 'react';\nimport Router from 'next/router';\nimport useSWR from 'swr';\nexport default function useMe({\n  redirectTo = false,\n  redirectIfFound = false\n} = {}) {\n  const {\n    data: me,\n    mutate: mutateMe\n  } = useSWR('/api/me');\n  useEffect(() => {\n    if (!redirectTo || !me) return;\n\n    if (redirectTo && !redirectIfFound && !(me !== null && me !== void 0 && me.isLoggedIn) || redirectIfFound && me !== null && me !== void 0 && me.isLoggedIn) {\n      Router.push(redirectTo);\n    }\n  }, [me, redirectIfFound, redirectTo]);\n  return {\n    me,\n    mutateMe\n  };\n}","map":{"version":3,"sources":["/Users/joker/Desktop/ink/work/nft-holder/hooks/use-me.ts"],"names":["useEffect","Router","useSWR","useMe","redirectTo","redirectIfFound","data","me","mutate","mutateMe","isLoggedIn","push"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AASA,eAAe,SAASC,KAAT,CAAe;AAC5BC,EAAAA,UAAU,GAAG,KADe;AAE5BC,EAAAA,eAAe,GAAG;AAFU,IAGd,EAHD,EAGK;AAClB,QAAM;AAAEC,IAAAA,IAAI,EAAEC,EAAR;AAAYC,IAAAA,MAAM,EAAEC;AAApB,MAAiCP,MAAM,CAAW,SAAX,CAA7C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,UAAD,IAAe,CAACG,EAApB,EAAwB;;AAExB,QACGH,UAAU,IAAI,CAACC,eAAf,IAAkC,EAACE,EAAD,aAACA,EAAD,eAACA,EAAE,CAAEG,UAAL,CAAnC,IACCL,eAAe,IAAIE,EAAJ,aAAIA,EAAJ,eAAIA,EAAE,CAAEG,UAF1B,EAGE;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAYP,UAAZ;AACD;AACF,GATQ,EASN,CAACG,EAAD,EAAKF,eAAL,EAAsBD,UAAtB,CATM,CAAT;AAWA,SAAO;AAAEG,IAAAA,EAAF;AAAME,IAAAA;AAAN,GAAP;AACD","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router'\nimport useSWR from 'swr'\n\nimport { UserType } from '../typings/user'\n\nexport interface UseMeProps {\n  redirectTo?: boolean | string\n  redirectIfFound?: boolean\n}\n\nexport default function useMe({\n  redirectTo = false,\n  redirectIfFound = false\n}: UseMeProps = {}) {\n  const { data: me, mutate: mutateMe } = useSWR<UserType>('/api/me')\n\n  useEffect(() => {\n    if (!redirectTo || !me) return\n\n    if (\n      (redirectTo && !redirectIfFound && !me?.isLoggedIn) ||\n      (redirectIfFound && me?.isLoggedIn)\n    ) {\n      Router.push(redirectTo as string)\n    }\n  }, [me, redirectIfFound, redirectTo])\n\n  return { me, mutateMe }\n}\n"]},"metadata":{},"sourceType":"module"}