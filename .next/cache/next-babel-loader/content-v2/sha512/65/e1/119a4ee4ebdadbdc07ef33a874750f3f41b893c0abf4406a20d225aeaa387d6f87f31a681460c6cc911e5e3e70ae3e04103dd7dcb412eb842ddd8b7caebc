{"ast":null,"code":"import withSession from '../../../lib/session';\n\nconst cardStatHandler = async (req, res) => {\n  const {\n    method,\n    query\n  } = req;\n  const {\n    id\n  } = query;\n\n  switch (method) {\n    case 'GET':\n      {\n        const result = await fetch(`${process.env.API_BASE}/api/v1/stat/blog?bid=${id}`);\n        let data = null;\n\n        try {\n          data = await result.json();\n        } catch (error) {\n          console.error(error);\n        }\n\n        if (!result.ok) {\n          res.status(result.status).json(data);\n          return;\n        }\n\n        res.status(200).json({\n          offerTotal: data.number,\n          highPrice: data.max,\n          averagePrice: data.average\n        });\n        break;\n      }\n\n    default:\n      res.setHeader('Allow', ['GET']);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n};\n\nexport default withSession(cardStatHandler);","map":{"version":3,"sources":["/Users/joker/Desktop/ink/work/nft-holder/pages/api/card/stat.ts"],"names":["withSession","cardStatHandler","req","res","method","query","id","result","fetch","process","env","API_BASE","data","json","error","console","ok","status","offerTotal","number","highPrice","max","averagePrice","average","setHeader","end"],"mappings":"AAGA,OAAOA,WAAP,MAAwB,sBAAxB;;AAGA,MAAMC,eAAe,GAAG,OACtBC,GADsB,EAEtBC,GAFsB,KAGnB;AACH,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBH,GAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAASD,KAAf;;AAEA,UAAQD,MAAR;AACE,SAAK,KAAL;AAAY;AACV,cAAMG,MAAM,GAAG,MAAMC,KAAK,CACvB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,yBAAwBL,EAAG,EAD3B,CAA1B;AAGA,YAAIM,IAAI,GAAG,IAAX;;AACA,YAAI;AACFA,UAAAA,IAAI,GAAG,MAAML,MAAM,CAACM,IAAP,EAAb;AACD,SAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,UAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AACD,YAAI,CAACP,MAAM,CAACS,EAAZ,EAAgB;AACdb,UAAAA,GAAG,CAACc,MAAJ,CAAWV,MAAM,CAACU,MAAlB,EAA0BJ,IAA1B,CAA+BD,IAA/B;AACA;AACD;;AACDT,QAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AACnBK,UAAAA,UAAU,EAAEN,IAAI,CAACO,MADE;AAEnBC,UAAAA,SAAS,EAAER,IAAI,CAACS,GAFG;AAGnBC,UAAAA,YAAY,EAAEV,IAAI,CAACW;AAHA,SAArB;AAKA;AACD;;AACD;AACEpB,MAAAA,GAAG,CAACqB,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACArB,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB,CAAqB,UAASrB,MAAO,cAArC;AAxBJ;AA0BD,CAjCD;;AAmCA,eAAeJ,WAAW,CAACC,eAAD,CAA1B","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\nimport { Session } from 'next-iron-session'\n\nimport withSession from '../../../lib/session'\nimport { StatDataType } from '../../../typings/card'\n\nconst cardStatHandler = async (\n  req: NextApiRequest & { session?: Session },\n  res: NextApiResponse<StatDataType>\n) => {\n  const { method, query } = req\n  const { id } = query\n\n  switch (method) {\n    case 'GET': {\n      const result = await fetch(\n        `${process.env.API_BASE}/api/v1/stat/blog?bid=${id}`\n      )\n      let data = null\n      try {\n        data = await result.json()\n      } catch (error) {\n        console.error(error)\n      }\n      if (!result.ok) {\n        res.status(result.status).json(data)\n        return\n      }\n      res.status(200).json({\n        offerTotal: data.number,\n        highPrice: data.max,\n        averagePrice: data.average\n      })\n      break\n    }\n    default:\n      res.setHeader('Allow', ['GET'])\n      res.status(405).end(`Method ${method} Not Allowed`)\n  }\n}\n\nexport default withSession(cardStatHandler)\n"]},"metadata":{},"sourceType":"module"}