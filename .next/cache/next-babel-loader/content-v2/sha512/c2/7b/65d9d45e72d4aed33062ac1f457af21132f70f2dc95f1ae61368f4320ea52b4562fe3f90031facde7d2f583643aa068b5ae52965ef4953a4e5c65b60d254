{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joker/Desktop/ink/work/nft-holder/components/price-input.tsx\",\n    _this = this;\n\nimport { InputNumber } from 'antd';\n\nvar currencyParser = function currencyParser(val) {\n  var value = val || '0';\n  return parseInt(value.replace(/¥\\s?|(,*)/g, ''));\n};\n\nvar PriceInput = function PriceInput(props) {\n  var value = props.value,\n      onChange = props.onChange,\n      precision = props.precision,\n      size = props.size,\n      disabled = props.disabled;\n  return /*#__PURE__*/_jsxDEV(InputNumber, {\n    size: size,\n    style: {\n      width: '100%'\n    },\n    min: 0,\n    max: 20000,\n    step: 10,\n    value: value,\n    onChange: onChange,\n    formatter: function formatter(value) {\n      return \"\\xA5 \".concat(value);\n    },\n    precision: precision,\n    parser: currencyParser,\n    disabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = PriceInput;\nexport default PriceInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceInput\");","map":{"version":3,"sources":["/Users/joker/Desktop/ink/work/nft-holder/components/price-input.tsx"],"names":["InputNumber","currencyParser","val","value","parseInt","replace","PriceInput","props","onChange","precision","size","disabled","width"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,MAA5B;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAA6B;AAClD,MAAMC,KAAK,GAAGD,GAAG,IAAI,GAArB;AACA,SAAOE,QAAQ,CAACD,KAAK,CAACE,OAAN,CAAc,YAAd,EAA4B,EAA5B,CAAD,CAAf;AACD,CAHD;;AAKA,IAAMC,UAML,GAAG,SANEA,UAMF,CAACC,KAAD,EAAW;AAAA,MACLJ,KADK,GAC0CI,KAD1C,CACLJ,KADK;AAAA,MACEK,QADF,GAC0CD,KAD1C,CACEC,QADF;AAAA,MACYC,SADZ,GAC0CF,KAD1C,CACYE,SADZ;AAAA,MACuBC,IADvB,GAC0CH,KAD1C,CACuBG,IADvB;AAAA,MAC6BC,QAD7B,GAC0CJ,KAD1C,CAC6BI,QAD7B;AAEb,sBACE,QAAC,WAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,GAAG,EAAE,CAHP;AAIE,IAAA,GAAG,EAAE,KAJP;AAKE,IAAA,IAAI,EAAE,EALR;AAME,IAAA,KAAK,EAAET,KANT;AAOE,IAAA,QAAQ,EAAEK,QAPZ;AAQE,IAAA,SAAS,EAAE,mBAACL,KAAD;AAAA,4BAAgBA,KAAhB;AAAA,KARb;AASE,IAAA,SAAS,EAAEM,SATb;AAUE,IAAA,MAAM,EAAER,cAVV;AAWE,IAAA,QAAQ,EAAEU;AAXZ;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAvBD;;KAAML,U;AAyBN,eAAeA,UAAf","sourcesContent":["import { InputNumber } from 'antd'\nimport { InputNumberProps } from 'antd/lib/input-number'\n\nexport interface PriceInputProps {\n  value?: number\n}\n\nconst currencyParser = (val: string | undefined) => {\n  const value = val || '0'\n  return parseInt(value.replace(/¥\\s?|(,*)/g, ''))\n}\n\nconst PriceInput: React.FC<\n  PriceInputProps &\n    Pick<\n      InputNumberProps<number>,\n      'onChange' | 'precision' | 'size' | 'disabled'\n    >\n> = (props) => {\n  const { value, onChange, precision, size, disabled } = props\n  return (\n    <InputNumber\n      size={size}\n      style={{ width: '100%' }}\n      min={0}\n      max={20000}\n      step={10}\n      value={value}\n      onChange={onChange}\n      formatter={(value) => `¥ ${value}`}\n      precision={precision}\n      parser={currencyParser}\n      disabled={disabled}\n    />\n  )\n}\n\nexport default PriceInput\n"]},"metadata":{},"sourceType":"module"}